{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","selectItem","goods","setState","prevGoods","removeItem","filter","item","clearItems","listItems","length","slice","join","className","this","type","classNames","onClick","map","isSelected","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAMWC,EAAb,4MACEC,MAAQ,CACNC,cAAe,CAAC,QAFpB,EAKEC,WAAa,SAACC,GACZ,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BJ,cAAc,GAAD,mBAAMI,EAAUJ,eAAhB,CAA+BE,SAPlD,EAWEG,WAAa,SAACH,GACZ,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BJ,cAAeI,EAAUJ,cAAcM,QAAO,SAAAC,GAAI,OAAIA,IAASL,UAbrE,EAiBEM,WAAa,WACX,EAAKL,SAAS,CACZH,cAAe,MAnBrB,EAuBES,UAAY,WACV,IAAQT,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcU,QACpB,KAAK,EACH,MAAO,qBAET,KAAKb,EAAgBa,OACnB,MAAO,sBAET,KAAK,EACH,MAAM,GAAN,OAAUV,EAAV,iBAEF,QACE,MAAM,GAAN,OAAUA,EAAcW,MAAM,GAAI,GAAGC,KAAK,MAA1C,gBAAuDZ,EAAcW,OAAO,GAA5E,oBArCR,4CAyCE,WAAU,IAAD,OACP,OACE,sBAAKE,UAAU,MAAf,UACE,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,aAAd,SACGC,KAAKL,cAER,wBACEM,KAAK,SACLF,UAAWG,IAAW,cAAe,sBACrCC,QAASH,KAAKN,WAHhB,2BASF,oBAAIK,UAAU,YAAd,SACGhB,EAAgBqB,KAAI,SAACX,GACpB,IAAMY,EAAa,EAAKpB,MAAMC,cAAcoB,SAASb,GAErD,OACE,qBAEEM,UAAWG,IAAW,iBACpB,CACE,0BAAyC,IAAfG,IAJhC,UAOGZ,EACD,wBACEQ,KAAK,SACLF,UAAWG,IAAW,cACpB,CACE,uBAAsC,IAAfG,IAE3BF,QAAS,WACP,OAAOE,EACH,EAAKd,WAAWE,GAChB,EAAKN,WAAWM,IATxB,SAYGY,EAAa,SAAW,UAnBtBZ,eA/DrB,GAAyBc,IAAMC,WCjB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.727aa1a6.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string [];\n};\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  selectItem = (goods: string) => {\n    this.setState((prevGoods) => ({\n      selectedGoods: [...prevGoods.selectedGoods, goods],\n    }));\n  };\n\n  removeItem = (goods: string) => {\n    this.setState((prevGoods) => ({\n      selectedGoods: prevGoods.selectedGoods.filter(item => item !== goods),\n    }));\n  };\n\n  clearItems = () => {\n    this.setState({\n      selectedGoods: [],\n    });\n  };\n\n  listItems = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected.';\n\n      case goodsFromServer.length:\n        return 'All goods selected.';\n\n      case 1:\n        return `${selectedGoods} is selected.`;\n\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods.slice(-1)} are selected.`;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App__header\">\n          <h1 className=\"App__title\">\n            {this.listItems()}\n          </h1>\n          <button\n            type=\"button\"\n            className={classNames('App__button', 'App__button--clear')}\n            onClick={this.clearItems}\n          >\n            Remove all\n          </button>\n        </div>\n\n        <ul className=\"App__list\">\n          {goodsFromServer.map((item) => {\n            const isSelected = this.state.selectedGoods.includes(item);\n\n            return (\n              <li\n                key={item}\n                className={classNames('App__list-item',\n                  {\n                    'App__list-item--active': isSelected === true,\n                  })}\n              >\n                {item}\n                <button\n                  type=\"button\"\n                  className={classNames('App__button',\n                    {\n                      'App__button--remove': isSelected === true,\n                    })}\n                  onClick={() => {\n                    return isSelected\n                      ? this.removeItem(item)\n                      : this.selectItem(item);\n                  }}\n                >\n                  {isSelected ? 'Remove' : 'Add'}\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}